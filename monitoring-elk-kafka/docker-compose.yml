
version: '2.2'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELASTICSEARCH_VERSION
    container_name: elasticsearch
    environment:
      node.name: "elasticsearch"
      cluster.name: "elasticsearch-cluster-8"
      discovery.type: "single-node"
      ES_JAVA_OPTS: "-Xms256m -Xmx256m"
      ELASTIC_USERNAME: $ELASTICSEARCH_USERNAME
      ELASTIC_PASSWORD: $ELASTICSEARCH_PASSWORD
      http.cors.enabled: "true"
      http.cors.allow-origin: "*"
      xpack.security.enabled: "true"
    labels:
      co.elastic.metrics/module: "elasticsearch"
      co.elastic.metrics/hosts: "http://elasticsearch:9200"
      co.elastic.metrics/metricsets: "node_stats,node"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic-search-data:/usr/share/elasticsearch/data
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - 9200:9200
    networks:
      - elk-kafka-network

  kibana:
    image: docker.elastic.co/kibana/kibana:$KIBANA_VERSION
    container_name: kibana
    env_file:
      - .env
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - 5601:5601
    networks:
      - elk-kafka-network
    depends_on:
      - elasticsearch

  metricbeat:
    build:
      context: metricbeat/
      args:
        METRICBEAT_VERSION: $METRICBEAT_VERSION
    image: metricbeat:8.14.0-hint-enabled
    user: root
    container_name: metricbeat
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    volumes:
      - metricbeat-data:/usr/share/metricbeat/data
      # - ./metricbeat/metricbeat.docker.yml:/usr/share/metricbeat/metricbeat.yml
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - elk-kafka-network
    depends_on:
      - kafka-elk

  logstash-indexer:
    build:
      context: logstash-indexer/
      args:
        LOGSTASH_INDEXER_VERSION: $LOGSTASH_INDEXER_VERSION
    image: docker.elastic.co/logstash/logstash:$LOGSTASH_INDEXER_VERSION-integration-kafka
    container_name: logstash-indexer
    volumes:
      - ./logstash-indexer/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash-indexer/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - 5144:5044
      - 51000:50000/tcp
      - 51000:50000/udp
      - 9700:9600
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      xpack.monitoring.elasticsearch.url: "elasticsearch:9200"
      xpack.monitoring.elasticsearch.username: $ELASTICSEARCH_USERNAME
      xpack.monitoring.elasticsearch.password: $ELASTICSEARCH_PASSWORD
    networks:
      - elk-kafka-network
    depends_on:
      - kafka-elk

  kafka-elk:
    image: bitnami/kafka:$KAFKA_VERSION
    container_name: kafka-elk
    command:
      - 'sh'
      - '-c'
      - '/opt/bitnami/scripts/kafka/setup.sh && kafka-storage.sh format --config "$${KAFKA_CONF_FILE}" --cluster-id "lkorDA4qT6W1K_dk0LHvtg" --ignore-formatted  && /opt/bitnami/scripts/kafka/run.sh' # Kraft specific initialise
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      # Start Kraft Setup (Kafka as Controller - no Zookeeper)
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LOG_DIRS=/tmp/logs
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,INTERNAL://:9094
      # End Kraft Specific Setup
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,INTERNAL://kafka-elk:9094
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_NUM_PARTITIONS=4
    ports:
      - "0.0.0.0:9092:9092"
    networks:
      - elk-kafka-network

  kafka-ui-elk:
    image: provectuslabs/kafka-ui:$KAFKA_UI_VERSION
    container_name: kafka-ui-elk
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "lkorDA4qT6W1K_dk0LHvtg"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-elk:9094
      AUTH_TYPE: "LOGIN_FORM"
      SPRING_SECURITY_USER_NAME: $KAFKA_UI_USERNAME
      SPRING_SECURITY_USER_PASSWORD: $KAFKA_UI_PASSWORD
    networks:
      - elk-kafka-network
    depends_on:
      - kafka-elk

volumes:
  elastic-search-data:
    driver: local
  metricbeat-data:
    driver: local

networks:
  elk-kafka-network:
    driver: bridge